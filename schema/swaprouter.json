{
  "contract_name": "swaprouter",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "description": "Message type for `instantiate` entry_point",
    "type": "object",
    "required": [
      "owner"
    ],
    "properties": {
      "owner": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "description": "Message type for `execute` entry_point",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "set_route"
        ],
        "properties": {
          "set_route": {
            "type": "object",
            "required": [
              "input_denom",
              "output_denom",
              "pool_route"
            ],
            "properties": {
              "input_denom": {
                "type": "string"
              },
              "output_denom": {
                "type": "string"
              },
              "pool_route": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/SwapAmountInRoute"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "swap"
        ],
        "properties": {
          "swap": {
            "type": "object",
            "required": [
              "input_coin",
              "output_denom",
              "swap_type"
            ],
            "properties": {
              "input_coin": {
                "$ref": "#/definitions/Coin"
              },
              "output_denom": {
                "type": "string"
              },
              "swap_type": {
                "$ref": "#/definitions/SwapType"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Coin": {
        "type": "object",
        "required": [
          "amount",
          "denom"
        ],
        "properties": {
          "amount": {
            "$ref": "#/definitions/Uint128"
          },
          "denom": {
            "type": "string"
          }
        }
      },
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      },
      "SwapAmountInRoute": {
        "description": "===================== MsgSwapExactAmountIn",
        "type": "object",
        "required": [
          "pool_id",
          "token_out_denom"
        ],
        "properties": {
          "pool_id": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "token_out_denom": {
            "type": "string"
          }
        }
      },
      "SwapType": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "max_slippage_percentage"
            ],
            "properties": {
              "max_slippage_percentage": {
                "$ref": "#/definitions/Decimal"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "min_output_amount"
            ],
            "properties": {
              "min_output_amount": {
                "$ref": "#/definitions/Uint128"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "description": "Message type for `query` entry_point",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "get_owner"
        ],
        "properties": {
          "get_owner": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_route"
        ],
        "properties": {
          "get_route": {
            "type": "object",
            "required": [
              "input_denom",
              "output_denom"
            ],
            "properties": {
              "input_denom": {
                "type": "string"
              },
              "output_denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "get_owner": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GetOwnerResponse",
      "type": "object",
      "required": [
        "owner"
      ],
      "properties": {
        "owner": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "get_route": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GetRouteResponse",
      "type": "object",
      "required": [
        "pool_route"
      ],
      "properties": {
        "pool_route": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SwapAmountInRoute"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "SwapAmountInRoute": {
          "description": "===================== MsgSwapExactAmountIn",
          "type": "object",
          "required": [
            "pool_id",
            "token_out_denom"
          ],
          "properties": {
            "pool_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "token_out_denom": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
